<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ailab.ecommerce.repository.OrderRepository">

    <resultMap id="orderResultMap" type="com.ailab.ecommerce.order.Order">
        <id property="id" column="id"/>
        <association property="customer" javaType="com.ailab.ecommerce.customer.Customer">
            <id property="id" column="customer_id"/>
            <result property="name" column="customer_name"/>
            <result property="email" column="customer_email"/>
            <result property="address" column="customer_address"/>
        </association>
        <collection property="products" ofType="com.ailab.ecommerce.product.Product">
            <id property="id" column="product_id"/>
            <result property="name" column="product_name"/>
            <result property="price" column="product_price"/>
        </collection>
    </resultMap>

    <select id="findById" resultMap="orderResultMap">
        SELECT
            o.id,
            o.customer_id AS customer_id,
            c.name AS customer_name,
            c.email AS customer_email,
            c.address AS customer_address,
            p.id AS product_id,
            p.name AS product_name,
            p.price AS product_price
        FROM orders o
                 LEFT JOIN customer c ON o.customer_id = c.id
                 LEFT JOIN order_product op ON o.id = op.order_id
                 LEFT JOIN product p ON op.product_id = p.id
        WHERE o.id = #{id}
    </select>

    <select id="findAllByProductsId" resultMap="orderResultMap">
        SELECT
            o.id,
            o.customer_id AS customer_id,
            c.name AS customer_name,
            c.email AS customer_email,
            c.address AS customer_address,
            p.id AS product_id,
            p.name AS product_name,
            p.price AS product_price
        FROM orders o
                 LEFT JOIN customer c ON o.customer_id = c.id
                 LEFT JOIN order_product op ON o.id = op.order_id
                 LEFT JOIN product p ON op.product_id = p.id
        WHERE p.id = #{productId}
    </select>


    <select id="findAll" resultMap="orderResultMap">
        SELECT
            o.id,
            o.customer_id,
            c.name AS customer_name,
            c.email AS customer_email,
            c.address AS customer_address,
            p.id AS product_id,
            p.name AS product_name,
            p.price AS product_price
        FROM orders o
                 LEFT JOIN customer c ON o.customer_id = c.id
                 LEFT JOIN order_product op ON o.id = op.order_id
                 LEFT JOIN product p ON op.product_id = p.id
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM order_product WHERE order_id = #{id};

        DELETE FROM orders WHERE id = #{id};
    </delete>


    <insert id="save" parameterType="com.ailab.ecommerce.order.Order">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('orders_id_seq')
        </selectKey>
        INSERT INTO orders (id,customer_id) VALUES (#{id},#{customer.id});

        <foreach collection="products" item="product" separator=";">
            INSERT INTO order_product (order_id, product_id) VALUES (#{id}, #{product.id})
        </foreach>
    </insert>



    <update id="update" parameterType="com.ailab.ecommerce.order.Order">
        UPDATE orders
        SET customer_id = #{customer.id}
        WHERE id = #{id};

        DELETE FROM order_product WHERE order_id = #{id};

        <foreach collection="products" item="product" separator=";">
            INSERT INTO order_product (order_id, product_id) VALUES (#{id}, #{product.id})
        </foreach>
    </update>




    <select id="findAllByCustomerId" resultMap="orderResultMap">
        SELECT
            o.id,
            o.customer_id AS customer_id,
            c.name AS customer_name,
            c.email AS customer_email,
            c.address AS customer_address,
            p.id AS product_id,
            p.name AS product_name,
            p.price AS product_price
        FROM orders o
                 LEFT JOIN customer c ON o.customer_id = c.id
                 LEFT JOIN order_product op ON o.id = op.order_id
                 LEFT JOIN product p ON op.product_id = p.id
        WHERE c.id = #{customerId}
    </select>

</mapper>
